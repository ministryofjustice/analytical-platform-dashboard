version: "3.11"
services:
  db:
    image: "postgres:16.1"
    environment:
      POSTGRES_DB: "controlpanel"
      POSTGRES_PASSWORD: "password"
      POSTGRES_USER: "controlpanel"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  migration:
    image: ${REGISTRY}/${REPOSITORY}:${IMAGE_TAG:-latest}
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: "db"
      DB_NAME: "controlpanel"
      DB_PASSWORD: "password"
      DB_PORT: 5432
      DB_USER: "controlpanel"
      DEBUG: "True"
      PYTHONUNBUFFERED: "1"
      DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE}
    command: sh -c "./manage.py migrate"

  interfaces:
    image: ${REGISTRY}/${REPOSITORY}:${IMAGE_TAG:-latest}
    build:
      context: .
      additional_contexts:
        - output=type=docker
      dockerfile: Dockerfile
    ports: ["8000:8000"]
    depends_on:
      db:
        condition: service_healthy
    links: [db]
    environment:
      ALLOWED_HOSTS: "localhost 127.0.0.1 0.0.0.0"
      DB_HOST: "db"
      DB_NAME: controlpanel
      DB_PASSWORD: password
      DB_PORT: 5432
      DB_USER: controlpanel
      DEBUG: "True"
      DJANGO_SETTINGS_MODULE: "controlpanel.settings.test"
      ENV: "dev"
      OIDC_CLIENT_ID: ${OIDC_CLIENT_ID}
      OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET}
      OIDC_OP_CONF_URL: ${OIDC_OP_CONF_URL}
      PYTHONUNBUFFERED: "1"
      SECRET_KEY: "1234567890"
      ENABLE_DB_SSL: "False"
