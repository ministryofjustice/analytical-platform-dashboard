---
name: Run Automated tests

on: # yamllint disable-line rule:truthy
  pull_request:
    branches:
      - main
    types:
      - edited
      - opened
      - reopened
      - synchronize

permissions: {}

jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      statuses: write
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Build Image
        id: build_image
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          push: false
          load: true
          tags: control-panel

      # - name: Set up Docker Context for Buildx
      #   id: buildx-context
      #   run: docker context use builders || docker context create builders

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1
      #   with:
      #     version: latest
      #     endpoint: builders
      #     driver-opts: |
      #       network=host
      #     install: true

      # - name: Prep Tags
      #   id: prep
      #   run: |
      #     TAG=noop
      #     if [[ $GITHUB_REF == refs/tags/* ]]; then
      #       TAG=${GITHUB_REF#refs/tags/}
      #     elif [[ $GITHUB_REF == refs/heads/* ]]; then
      #       TAG=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
      #       if [ "${{ github.event.repository.default_branch }}" = "$TAG" ]; then
      #         TAG=edge
      #       fi
      #     elif [[ $GITHUB_REF == refs/pull/* ]]; then
      #       TAG=pr-${{ github.event.number }}
      #     elif [ "${{ github.event_name }}" = "push" ]; then
      #       TAG="sha-${GITHUB_SHA::8}"
      #     fi
      #     echo ::set-output name=tag::${TAG}
      #     echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      # - name: Build image
      #   run: make build-image
      #   env:
      #     NETWORK: host
      #     IMAGE_TAG: ${{ steps.prep.outputs.tag }}

      - name: Run Python tests (docker-compose)
        run: |
          docker compose down --remove-orphans
          docker compose --file contrib/docker-compose-test.yml run --rm interfaces sh -c "pytest tests --color=yes"
        env:
          NETWORK: default
          IMAGE_TAG: control-panel
